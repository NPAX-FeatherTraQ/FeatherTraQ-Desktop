<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnCancel" xml:space="preserve">
    <value>戻る</value>
  </data>
  <data name="btnCapturePhoto" xml:space="preserve">
    <value>所有者の写真</value>
  </data>
  <data name="btnGetAssetInfo" xml:space="preserve">
    <value>アセットの情報</value>
  </data>
  <data name="btnGetRFIDTag" xml:space="preserve">
    <value>タグを取得です</value>
  </data>
  <data name="btnReadIDTag" xml:space="preserve">
    <value>IDタグ</value>
  </data>
  <data name="btnSubmit" xml:space="preserve">
    <value>登録</value>
  </data>
  <data name="cancel" xml:space="preserve">
    <value>キャンセル</value>
  </data>
  <data name="cancelRegistration" xml:space="preserve">
    <value>登録を取り消すにしてもよろしいですか？</value>
  </data>
  <data name="cancelUpdate" xml:space="preserve">
    <value>更新を取り消すにしてもよろしいですか？</value>
  </data>
  <data name="chkBoxChangeCamera" xml:space="preserve">
    <value>カメラ選択</value>
  </data>
  <data name="date" xml:space="preserve">
    <value>日</value>
  </data>
  <data name="expiredAsset" xml:space="preserve">
    <value>このアセットはすでに期限切れ</value>
  </data>
  <data name="expiredId" xml:space="preserve">
    <value>このIDはすでに期限切れ</value>
  </data>
  <data name="grpAssetInfo" xml:space="preserve">
    <value>アセットの情報</value>
  </data>
  <data name="grpCameraPreview" xml:space="preserve">
    <value>カメラのプレビュー</value>
  </data>
  <data name="grpCaptured" xml:space="preserve">
    <value>写真</value>
  </data>
  <data name="grpExpiration" xml:space="preserve">
    <value>期限切れ</value>
  </data>
  <data name="imageLimit" xml:space="preserve">
    <value>撮影した写真は、最大限に超え.</value>
  </data>
  <data name="infoRequired" xml:space="preserve">
    <value>完全な情報は、必要とされます.</value>
  </data>
  <data name="lblAssetPhoto1" xml:space="preserve">
    <value>アセット写真一</value>
  </data>
  <data name="lblAssetPhoto2" xml:space="preserve">
    <value>アセット写真二</value>
  </data>
  <data name="lblAssetPhoto3" xml:space="preserve">
    <value>アセット写真三</value>
  </data>
  <data name="lblAssetPic" xml:space="preserve">
    <value>アセットの写真</value>
  </data>
  <data name="lblDesc" xml:space="preserve">
    <value>説明文</value>
  </data>
  <data name="lblLoadingInformation" xml:space="preserve">
    <value>情報を取得します. お待ちください...</value>
  </data>
  <data name="lblLoginUserName" xml:space="preserve">
    <value>ユーザID: </value>
  </data>
  <data name="lblMemo" xml:space="preserve">
    <value>メモ</value>
  </data>
  <data name="lblNoCameraAvailable" xml:space="preserve">
    <value>カメラはない</value>
  </data>
  <data name="lblOwnerName" xml:space="preserve">
    <value>所有者の名前</value>
  </data>
  <data name="lblOwnerPhoto" xml:space="preserve">
    <value>所有者の写真</value>
  </data>
  <data name="lblOwnerPic" xml:space="preserve">
    <value>所有者の写真</value>
  </data>
  <data name="lblTag" xml:space="preserve">
    <value>タグ</value>
  </data>
  <data name="lblValidIDPhoto" xml:space="preserve">
    <value>有効なIDの写真</value>
  </data>
  <data name="photoComplete" xml:space="preserve">
    <value>完成しました</value>
  </data>
  <data name="processing" xml:space="preserve">
    <value>処理. お待ちください...</value>
  </data>
  <data name="rbtnLblUntil" xml:space="preserve">
    <value>まで</value>
  </data>
  <data name="rbtnNoExpiration" xml:space="preserve">
    <value>無制限</value>
  </data>
  <data name="rbtnValidToday" xml:space="preserve">
    <value>今日だけ</value>
  </data>
  <data name="rbtnValidUntil" xml:space="preserve">
    <value>開始</value>
  </data>
  <data name="readerNotConnected" xml:space="preserve">
    <value>リーダーが接続されていません.</value>
  </data>
  <data name="refreshCamera" xml:space="preserve">
    <value>リフレッシュカメラ</value>
  </data>
  <data name="renew" xml:space="preserve">
    <value>更新したいですか？</value>
  </data>
  <data name="saveTrans" xml:space="preserve">
    <value>取引を保存します。。。</value>
  </data>
  <data name="serverError" xml:space="preserve">
    <value>サーバーへの接続エラー.. 後でもう一度試してみてください</value>
  </data>
  <data name="stepFive" xml:space="preserve">
    <value>第五ステップ</value>
  </data>
  <data name="stepFour" xml:space="preserve">
    <value>第四ステップ</value>
  </data>
  <data name="stepOne" xml:space="preserve">
    <value>第一ステップ</value>
  </data>
  <data name="stepThree" xml:space="preserve">
    <value>第三ステップ</value>
  </data>
  <data name="stepTwo" xml:space="preserve">
    <value>第二ステップ</value>
  </data>
  <data name="submitInfo" xml:space="preserve">
    <value>情報を提出します. お待ちください...</value>
  </data>
  <data name="time" xml:space="preserve">
    <value>時間</value>
  </data>
  <data name="title" xml:space="preserve">
    <value>アセットを登録</value>
  </data>
  <data name="update" xml:space="preserve">
    <value>更新</value>
  </data>
  <data name="updateInfo" xml:space="preserve">
    <value>情報を更新します. お待ちください...</value>
  </data>
  <data name="updateSuccess" xml:space="preserve">
    <value>レコードが正常に更新します.</value>
  </data>
</root>